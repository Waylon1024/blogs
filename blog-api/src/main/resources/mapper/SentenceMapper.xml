<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.naccl.mapper.SentenceMapper">

    <resultMap id="sentence" type="top.naccl.entity.Sentence">
        <id property="type" column="type"/>
        <result property="content" column="content"/>
        <result property="source" column="source"/>
    </resultMap>

    <insert id="addSingleSentence">
        insert into sentence (type, content, source, create_time, update_time) values (#{type}, #{content}, #{source}, now(), now())
    </insert>

    <insert id="addExcelSentence" parameterType="java.util.ArrayList">
        insert into sentence (type, content, source, create_time, update_time)
        values
        <foreach collection="list" item="sentenceList" separator=",">
            (#{sentenceList.type}, #{sentenceList.content}, #{sentenceList.source}, now(), now())
        </foreach>
    </insert>

    <delete id="deleteSentenceById">
        delete from sentence where id = #{id}
    </delete>

    <delete id="deleteSentencesByIds" parameterType="java.util.List">
        delete from sentence where id in
        <foreach item="id" collection="idList" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getSentence" resultMap="sentence">
        SELECT * FROM sentence ORDER BY RAND() LIMIT 1;
    </select>

    <select id="getSentencesList" resultMap="sentence">
        select * from sentence
        where 1 = 1
        <if test="req != null">
            <if test="req.type != null and req.type != ''">
                and type = #{req.type}
            </if>
            <if test="req.content != null">
                and content like concat('%', #{req.content}, '%')
            </if>
            <if test="req.source != null">
                and source like concat('%', #{req.source}, '%')
            </if>
        </if>
    </select>

    <select id="getSentencesTypeList" resultType="java.lang.Integer">
        select distinct type from sentence order by type asc ;
    </select>

    <update id="editSentence">
        update sentence set type=#{type}, content=#{content}, source=#{source}, update_Time=now() where id = #{id}
    </update>
</mapper>
